version: "3.8"
services:
    app:
        build:
            context: ./
            dockerfile: Dockerfile
        container_name: ai_hotel-api
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - ai_hotel-net
    nginx:
        image: nginx:alpine
        container_name: ai_hotel-nginx
        restart: unless-stopped
        ports:
            - "8122:80"
        volumes:
            - .:/var/www
            - ./dev/nginx/:/etc/nginx/conf.d/
        networks:
            - ai_hotel-net
    db:
        image: postgres:latest
        container_name: ai_hotel-postgres
        # we mount a datavolume to make sure we don't loose data
        volumes:
            - ./dbdata:/var/lib/postgresql/data
        ports:
            - "8431:5432"
        networks:
            - ai_hotel-net
        # setting some env vars to create the DB
        environment:
            - POSTGRES_DB=ai_hotel
            - POSTGRES_USER=ai_hotel
            - POSTGRES_PASSWORD=ai_hotel
        restart: always
    redis:
        image: redis:latest
        container_name: ai_hotel-redis
        ports:
            - "5379:6379"
        networks:
            - ai_hotel-net
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        container_name: ai_hotel-soketi
        ports:
            - '6001:6001'
            - '9601:9601'
        environment:
            SOKETI_DEBUG: '1'
            SOKETI_METRICS_SERVER_PORT: '9601'
        networks:
            - ai_hotel-net
#Docker Networks
networks:
    ai_hotel-net:
        driver: bridge
#Volumes
volumes:
    ai_hotel_data:
        driver: local
